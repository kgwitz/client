{"ast":null,"code":"import Axios from 'axios';\nconst URL = 'http://localhost:3001';\n\n//Matchups\nconst GetMatchups = async () => {\n  const res = await Axios.get(`${URL}/Matchup`);\n  if (res) {\n    return res;\n  }\n};\n\n//User\n_c = GetMatchups;\nconst Login = async (userName, password) => {\n  const data = {\n    userName: userName,\n    password: password\n  };\n  console.log('data', data);\n  const res = await Axios.post(`${URL}/Login`, data);\n  if (res) {\n    return res;\n  } else {\n    console.log('no response');\n  }\n};\n_c2 = Login;\nconst CreateUser = async data => {\n  const res = await Axios.post(`${URL}/CreateUser`, data);\n  if (res) {\n    return res;\n  } else {\n    console.log('could not create user');\n  }\n};\n_c3 = CreateUser;\nconst GetUser = async id => {\n  const res = await Axios.get(`${URL}/User`, {\n    params: {\n      id: id\n    }\n  });\n  if (res) {\n    return res;\n  } else {\n    console.log('could not find user with id:', id);\n  }\n};\n_c4 = GetUser;\nexport { GetMatchups, Login, GetUser, CreateUser };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetMatchups\");\n$RefreshReg$(_c2, \"Login\");\n$RefreshReg$(_c3, \"CreateUser\");\n$RefreshReg$(_c4, \"GetUser\");","map":{"version":3,"names":["Axios","URL","GetMatchups","res","get","_c","Login","userName","password","data","console","log","post","_c2","CreateUser","_c3","GetUser","id","params","_c4","$RefreshReg$"],"sources":["/Users/kurtisgassewitz/Repositories/slvshbracket/client/src/ApiRequests.js"],"sourcesContent":["import Axios from 'axios'\n\nconst URL = 'http://localhost:3001'\n\n//Matchups\nconst GetMatchups = async () => {\n    const res = await Axios.get(`${URL}/Matchup`)\n\n    if (res) {\n        return res\n    }\n}\n\n\n//User\nconst Login = async (userName, password) => {\n    const data = {\n        userName: userName,\n        password: password\n    }\n\n    console.log('data', data)\n    const res = await Axios.post(`${URL}/Login`, data)\n\n    if (res) {\n        return res\n    } else {\n        console.log('no response')\n    }\n}\n\nconst CreateUser = async (data) => {\n    const res = await Axios.post(`${URL}/CreateUser`, data)\n\n    if (res) {\n        return res\n    } else {\n        console.log('could not create user')\n    }\n}\n\nconst GetUser = async (id) => {\n    const res = await Axios.get(`${URL}/User`, {params: {id: id}})\n\n    if (res) {\n        return res\n    } else {\n        console.log('could not find user with id:', id)\n    }\n} \n\nexport {\n    GetMatchups,\n    Login,\n    GetUser,\n    CreateUser,\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,uBAAuB;;AAEnC;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,GAAI,UAAS,CAAC;EAE7C,IAAIE,GAAG,EAAE;IACL,OAAOA,GAAG;EACd;AACJ,CAAC;;AAGD;AAAAE,EAAA,GATMH,WAAW;AAUjB,MAAMI,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxC,MAAMC,IAAI,GAAG;IACTF,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACd,CAAC;EAEDE,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;EACzB,MAAMN,GAAG,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAE,GAAEX,GAAI,QAAO,EAAEQ,IAAI,CAAC;EAElD,IAAIN,GAAG,EAAE;IACL,OAAOA,GAAG;EACd,CAAC,MAAM;IACHO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B;AACJ,CAAC;AAAAE,GAAA,GAdKP,KAAK;AAgBX,MAAMQ,UAAU,GAAG,MAAOL,IAAI,IAAK;EAC/B,MAAMN,GAAG,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAE,GAAEX,GAAI,aAAY,EAAEQ,IAAI,CAAC;EAEvD,IAAIN,GAAG,EAAE;IACL,OAAOA,GAAG;EACd,CAAC,MAAM;IACHO,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACxC;AACJ,CAAC;AAAAI,GAAA,GARKD,UAAU;AAUhB,MAAME,OAAO,GAAG,MAAOC,EAAE,IAAK;EAC1B,MAAMd,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,GAAI,OAAM,EAAE;IAACiB,MAAM,EAAE;MAACD,EAAE,EAAEA;IAAE;EAAC,CAAC,CAAC;EAE9D,IAAId,GAAG,EAAE;IACL,OAAOA,GAAG;EACd,CAAC,MAAM;IACHO,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEM,EAAE,CAAC;EACnD;AACJ,CAAC;AAAAE,GAAA,GARKH,OAAO;AAUb,SACId,WAAW,EACXI,KAAK,EACLU,OAAO,EACPF,UAAU;AACb,IAAAT,EAAA,EAAAQ,GAAA,EAAAE,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}